import yfinance as yf
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

paypal = yf.download("PYPL", start="2020-01-01", end="2025-01-01")

paypal.dropna(inplace=True)

print(paypal.head())

paypal['MA50'] = paypal['Close'].rolling(window=50).mean()

paypal['Volatility'] = paypal['Close'].rolling(window=30).std()

paypal[['Close', 'MA50']].plot(figsize=(12,6), title='Τιμή και MA50 PayPal')
plt.xlabel('Ημερομηνία')
plt.ylabel('Τιμή ($)')
plt.grid()
plt.show()


paypal['Target'] = paypal['Close'].shift(-1)
X = paypal[['Close']][:-1]
y = paypal['Target'][:-1]
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = LinearRegression()
model.fit(X_train, y_train)
predictions = model.predict(X_test)

plt.figure(figsize=(12, 6))
plt.plot(y_test.values, label='Πραγματικές Τιμές')
plt.plot(predictions, label='Προβλέψεις', linestyle='--')
plt.legend()
plt.title('Πρόβλεψη Τιμής Κλεισίματος - PayPal')
plt.grid()
plt.show()

mse = mean_squared_error(y_test, predictions)
r2 = r2_score(y_test, predictions)

print(f'Mean Squared Error: {mse}')
print(f'R-squared:{r2}')


